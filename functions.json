{
    "version": "0.2.0",
    "functions": [
    {
        "title": "NodeInfo",
        "name": "nodeinfo",
        "description": "Get info about the machine that you're deployed on. Tells CPU count, hostname, OS, and Uptime",
        "images": {
            "arm64": "functions/nodeinfo:arm64",
            "armhf": "functions/nodeinfo:latest-armhf",
            "x86_64": "functions/nodeinfo:latest"
        },
        "fprocess": "node main.js",
        "network": "func_functions",
        "repo_url": "https://github.com/openfaas/faas/tree/master/sample-functions/NodeInfo"
    },
    {
        "title": "sha512sum",
        "name": "sha512sum",
        "description": "Generate shasums in 512 format",
        "images": {
            "arm64": "functions/alpine:latest-arm64"
        },
        "fprocess": "sha512sum",
        "network": "func_functions",
        "repo_url": "https://github.com/openfaas/faas/tree/master/sample-functions/AlpineFunction"
    },
    {
        "title": "Figlet",
        "name": "figlet",
        "description": "Generate ASCII logos with the figlet CLI",
        "images": {
            "armhf": "functions/figlet:latest-armhf",
            "x86_64": "functions/figlet:0.13.0"
        },
        "fprocess": "figlet",
        "repo_url": "https://github.com/openfaas/faas/tree/master/sample-functions/figlet"
    },
    {
        "title": "SSL/TLS cert info",
        "name": "certinfo",
        "description": "Returns SSL/TLS certificate information for a given URL",
        "icon": "https://raw.githubusercontent.com/stefanprodan/openfaas-certinfo/master/logo.png",
        "images": {
            "armhf": "rgee0/certinfo:armhf",
            "x86_64": "stefanprodan/certinfo"
        },
        "network": "func_functions",
        "repo_url": "https://github.com/stefanprodan/openfaas-certinfo"
    },
    {
        "title": "Colorization",
        "name": "colorise",
        "description": "Turn black and white photos to color using a URL as the request. The colorization function was popularised by @colorisebot by Alex Ellis and Finnian Anderson.",
        "icon": "https://pbs.twimg.com/profile_images/927538119901175814/4uhYwTyC_400x400.jpg",
        "images": {
            "x86_64": "alexellis2/openfaas-colorization:0.4.0"
        },
        "fprocess": "python -u index.py",
        "repo_url": "https://github.com/alexellis/repaint-the-past",
        "labels": {
            "com.openfaas.ui.ext": "png"
        },
        "environment": {
            "url_mode": "true",
            "read_timeout": "60",
            "write_timeout": "60",
            "write_debug": "false"
        }
    },
    {
        "title": "Inception",
        "name": "inception",
        "description": "This is a forked version of the work by Magnus Erik Hvass Pedersen - it has been re-packaged as an OpenFaaS serverless function.",
        "images": {
            "x86_64": "alexellis/inception:2019-02-17"
        },
        "fprocess": "python3 index.py",
        "repo_url": "https://github.com/faas-and-furious/inception-function",
        "environment": {
            "read_timeout": "60",
            "write_timeout": "60"
        }
    },
    {
        "title": "Have I Been Pwned",
        "icon": "https://store-images.s-microsoft.com/image/apps.2401.13510798883203237.d9b40472-ef9e-459e-88a8-fd9ee8e1466b.2a730341-fe3c-4e7f-baba-f147cbd7532b?w=180&h=180&q=60",
        "description": "The Have I Been Pwned function lets you know if your password has been used in a data-breach published on https://haveibeenpwned.com",
        "images": {
            "x86_64": "functions/haveibeenpwned:0.13.0"
        },
        "name": "haveibeenpwned",
        "repo_url": "https://github.com/openfaas/faas/tree/master/sample-functions/haveibeenpwned",
        "readOnlyRootFilesystem": true
    },
    {
        "title": "Face Detection with Pigo",
        "description": "Detect faces in images using the Pigo face detection library. You provide an image URI and the function draws boxes around the detected faces.",
        "images": {
            "x86_64": "esimov/pigo-openfaas:0.1"
        },
        "name": "face-detect-pigo",
        "repo_url": "https://github.com/esimov/pigo-openfaas",
        "readOnlyRootFilesystem": true,
        "environment": {
            "output_mode": "image",
            "input_mode": "url"
        },
        "labels": {
            "com.openfaas.ui.ext": "jpg"
        }
    },
    {
        "title": "SentimentAnalysis",
        "description": "Python function provides a rating on sentiment positive/negative (polarity -1.0-1.0) and subjectivity to provided to each of the sentences sent.",
        "images": {
            "x86_64": "functions/sentimentanalysis"
        },
        "envProcess": "python ./handler.py",
        "name": "sentimentanalysis",
        "repo_url": "https://github.com/openfaas/faas/tree/master/sample-functions/SentimentAnalysis"
    },
    {
        "title": "Business Strategy Generator",
        "description": "Generates a Business Strategy (using a package from Nisha Kumar, inspired by Simon Wardley)",
        "images": {
            "x86_64": "functions/business-strategy-generator:0.13.0"
        },
        "name": "business-strategy-generator",
        "repo_url": "https://github.com/alexellis/strategy_generator",
        "readOnlyRootFilesystem": true,
        "platform": "x86_64"
    },
    {
        "icon": "https://raw.githubusercontent.com/viveksyngh/openfaas-ocr/master/logo/ocr.png",
        "title": "Tesseract OCR",
        "description": "This function brings OCR - Optical Character Recognition through the tesseract engine. Just pass in a URL or base64 string of an image in .jpg or .png format.",
        "images": {
            "x86_64": "viveksyngh/openfaas-ocr:0.3.0"
        },
        "name": "ocr",
        "repo_url": "https://github.com/viveksyngh/openfaas-ocr"
    },
    {
        "icon": "https://raw.githubusercontent.com/docker-library/docs/b449be7df57e9ed9086bb5821bfb5d6cdc5d67a4/docker-dev/logo.png",
        "title": "Dockerhub Stats",
        "description": "Golang function gives the count of repos a user has on the Docker hub",
        "images": {
            "x86_64": "functions/hubstats"
        },
        "name": "hubstats",
        "repo_url": "https://github.com/openfaas/faas",
        "readOnlyRootFilesystem": true
    },
    {
        "icon": "https://raw.githubusercontent.com/faas-and-furious/qrcode/master/images/qrcode.png",
        "title": "QR Code Generator - Go",
        "description": "QR Code generator using Go",
        "images": {
            "x86_64": "alexellis/qrcode:0.1"
        },
        "name": "qrcode-go",
        "repo_url": "https://github.com/faas-and-furious/qrcode",
        "labels": {
            "com.openfaas.ui.ext": "png"
        }
    },
    {
        "icon": "https://nmap.org/images/nmap-logo-256x256.png",
        "title": "Nmap Security Scanner",
        "description": "Tool for network discovery and security auditing. Warning: use with caution on public clouds.",
        "images": {
            "x86_64": "functions/nmap:0.13.0"
        },
        "name": "nmap",
        "repo_url": "https://github.com/openfaas/faas/tree/master/sample-functions/Nmap",
        "environment": {
            "read_timeout": "300",
            "write_timeout": "300"
        }
    },
    {
        "title": "ASCII Cows",
        "description": "Generate cartoons of ASCII cows",
        "images": {
            "x86_64": "alexellis2/ascii-cows-openfaas:0.1"
        },
        "name": "cows",
        "fprocess": "node show_cow.js",
        "repo_url": "https://github.com/alexellis/cows-docker",
        "readOnlyRootFilesystem": true
    },
    {
        "icon": "https://www.youtube.com/yt/about/media/images/brand-resources/icons/YouTube_icon_full-color.svg",
        "title": "YouTube Video Downloader",
        "description": "Download YouTube videos as a function",
        "images": {
            "x86_64": "alexellis2/faas-youtubedl"
        },
        "name": "youtube-dl",
        "repo_url": "https://github.com/faas-and-furious/youtube-dl",
        "labels": {
            "com.openfaas.ui.ext": "mp4"
        },
        "environment": {
            "read_timeout": "300",
            "write_timeout": "300"
        }
    },
    {
        "icon": "https://ssl.gstatic.com/translate/community/backgrounds/globe.png",
        "title": "OpenFaaS Text-to-Speech",
        "description": "Generate an MP3 of text using Google's Text-to-Speech",
        "images": {
            "x86_64": "rorpage/text-to-speech",
            "armhf": "rgee0/text-to-speech:armhf-latest"
        },
        "name": "text-to-speech",
        "repo_url": "https://github.com/rorpage/openfaas-text-to-speech",
        "labels": {
            "com.openfaas.ui.ext": "mp3"
        },
        "environment": {
            "read_timeout": "60",
            "write_timeout": "60"
        }
    },
    {
        "title": "nslookup",
        "description": "Uses nslookup to return any IP address info on domains and URLs",
        "images": {
            "x86_64": "jockdarock/nslookupfaas:master",
            "armhf": "jockdarock/nslookup-arm-faas:latest-armhf"
        },
        "name": "nslookup",
        "repo_url": "https://github.com/jockdarock/nslookup_faas"
    },
    {
        "title": "Docker Image Manifest Query",
        "description": "Query an image on the Docker Hub for supported architectures - by Phil Estes",
        "images": {
            "x86_64": "rgee0/of-mquery:1.2",
            "armhf": "rgee0/of-mquery:1.2"
        },
        "fprocess": "./mquery",
        "name": "mquery",
        "repo_url": "https://github.com/rgee0/mquery/tree/openfaaschanges"
    },
    {
        "title": "face-detect with OpenCV",
        "description": "Detect faces in images. Send a URL as input and download a file with boxes drawn around detected faces. From our friend Nic Jackson",
        "images": {
            "x86_64": "alexellis2/facedetect:0.1"
        },
        "name": "face-detect-opencv",
        "repo_url": "https://github.com/alexellis/facedetect-openfaas",
        "readOnlyRootFilesystem": true,
        "environment": {
            "output_mode": "image",
            "input_mode": "url"
        },
        "labels": {
            "com.openfaas.ui.ext": "jpg"
        }
    },
    {
        "title": "Face blur by Endre Simo",
        "description": "Blur out faces detected in JPEGs. Invoke with the URL to the image.",
        "images": {
            "x86_64": "esimov/pigo-openfaas-faceblur:0.1"
        },
        "name": "face-blur",
        "repo_url": "https://github.com/esimov/pigo-openfaas-faceblur",
        "readOnlyRootFilesystem": true,
        "environment": {
            "output_mode": "image",
            "input_mode": "url",
            "content_type": "image/jpeg"
        },
        "labels": {
            "com.openfaas.ui.ext": "jpg"
        }
    },
    {
        "title": "Left-Pad",
        "description": "left-pad on OpenFaaS",
        "images": {
            "x86_64": "functions/faas-leftpad:0.2",
            "armhf": "rgee0/faas-leftpad"
        },
        "name": "leftpad",
        "repo_url": "https://github.com/faas-and-furious/faas-leftpad",
        "readOnlyRootFilesystem": true
    },
    {
        "title": "mememachine",
        "description": "Turn any image into a meme.",
        "images": {
            "x86_64": "developius/faas-mememachine:0.2"
        },
        "name": "mememachine",
        "repo_url": "https://github.com/developius/openfaas-mememachine",
        "labels": {
            "com.openfaas.ui.ext": "jpg"
        }
    }
    ]
}
